#include <stdio.h>
#include <stdlib.h>
#include <time.h>
/**
 * Note: The returned array must be malloced, assume caller calls free().
 * 
 * Input: nums = [3,2,4], target = 6
 * Output: [1,2]
 * 
 *  2 <= nums.length <= 1e5
 * -1e10 <= nums[i] <= 1e10
 * -1e10 <= target <= 1e10
 * Only one valid answer exists.
 * 
 */
//int returnarr[2];
int* twoSum(int* nums, int numsSize, int target, int *returnSize){
    int *returnarr = malloc(2*sizeof(int));
    
    for (int i=0; i<numsSize; i++){
        for (int j=i+1; j<numsSize; j++){
            //printf("i %d, j %d, nums[i] %d, nums[j] %d\n", i,j,nums[i],nums[j]);
            /*if(i==j)
                continue;*/
            if(nums[i]+nums[j] == target){
                //printf("loop i %d, j %d, nums[i] %d, nums[j] %d\n", i,j,nums[i],nums[j]);
                returnarr[0] = i;
                returnarr[1] = j;
                *returnSize = 2;
                return returnarr;
            }
            
        }
    }
    
    printf("target not found\n");
    *returnSize = 0;
    return returnarr;

}

int main(void){
    //int arr[4] = {2,7,11,15};
    //int target = 9;
    int numElements = 0;
    int returnSizeVal = 0;
    int *p, *returnSize;
    returnSize=&returnSizeVal;
    
    printf("Enter num of elements\n");
    scanf("%d", &numElements);
    
    int *arr = malloc(numElements*sizeof(int));
    srand ( time(NULL) );
    
    for (int i=0;i<numElements;i++){
        arr[i] = (rand() - RAND_MAX/2);
        printf("%d,",arr[i]);
    }
    printf("\n");
    
    int ind1 = rand() % (numElements-1);
    int ind2 = rand() % (numElements-1);
    int target = arr[ind1]+arr[ind2];
    printf("%d, %d, target: %d\n", arr[ind1],arr[ind2], target);
    p = twoSum(arr, numElements, target, returnSize);
    printf("[");
    for (int i=0; i< *returnSize; i++){
        printf("%d,",p[i]);
    }
    printf("]");
    free(p);
    return 0;
    
}
